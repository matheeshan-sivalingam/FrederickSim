<?xml version="1.0"?>
<launch>
   <!-- Cafe world spawn points
   <arg name="x_pos" default="0.127232"/>
  <arg name="y_pos" default="-8.701480"/>
  <arg name="z_pos" default="0.0"/>
   -->
  <arg name="x_pos" default="-2.0"/>
  <arg name="y_pos" default="-0.5"/>
  <arg name="z_pos" default="0.0"/>
  
  <!-- Launch the Gazebo world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- Dynamic-->
    <arg name="world_name" value="/usr/share/gazebo-11/worlds"/>
    <!-- <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_world.world"/> -->
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- Convert XACRO to URDF and load it into the ROS parameter server -->
  <param name="robot_description"
       command="$(find xacro)/xacro '$(find frederick_model_pkg)/urdf/frederick.xacro'" />
  <!-- Robot state publisher node --> 
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  
  <!-- Spawn robot model into Gazebo -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-param robot_description -urdf -model frederick -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos)"/>
   
  <!-- HectorSLAM -->
   <include file="$(find hector_slam_launch)/launch/tutorial.launch" />
  
  <!-- Start the navigation stack -->  
  <node pkg="move_base" type="move_base" respawn="false" name="move_base_node" output="screen">
    <param name="footprint_padding" value="0.01" />
    <param name="controller_frequency" value="10.0" />
    <param name="controller_patience" value="3.0" />

    <param name="oscillation_timeout" value="30.0" />
    <param name="oscillation_distance" value="0.5" />

    <rosparam file="$(find nav_package)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find nav_package)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find nav_package)/config/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find nav_package)/config/global_costmap_params.yaml" command="load" />
    <param name = "base_local_planner" value = "dwa_local_planner/DWAPlannerROS"/>
  </node>

  
</launch>

